<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kg.platform.dao.write.UserWMapper">

  <resultMap id="BaseResultMap" type="com.kg.platform.model.out.UserkgOutModel">
    <id column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="user_mobile" jdbcType="VARCHAR" property="userMobile" />
    <result column="mobile_area" jdbcType="VARCHAR" property="mobileArea" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="user_role" jdbcType="TINYINT" property="userRole" />
    <result column="user_level" jdbcType="TINYINT" property="userLevel" />
    <result column="audit_status" jdbcType="INTEGER" property="auditStatus" />
    <result column="lock_status" jdbcType="BIT" property="lockStatus" />
    <result column="third_party_id" jdbcType="VARCHAR" property="thirdPartyId" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="register_ip" jdbcType="VARCHAR" property="registerIp" />
    <result column="email_authed" jdbcType="BIT" property="emailAuthed" />
    <result column="mobile_authed" jdbcType="BIT" property="mobileAuthed" />
    <result column="user_order" jdbcType="INTEGER" property="userOrder" />
    <result column="hot_user" jdbcType="BIT" property="hotUser" />
    <result column="apply_role" jdbcType="INTEGER" property="applyRole" />
    <result column="tradepassword_set" jdbcType="BIT" property="tradepasswordSet" />
    <result column="realname_authed" jdbcType="INTEGER" property="realnameAuthed" />

    <result column="invite_code" property="inviteCode"/>
    <result column="register_origin" property="registerOrigin"/>
  </resultMap>
  
  <sql id="Base_Column_List">
    user_id, user_name, user_email, user_mobile, mobile_area, user_password, user_role, 
    user_level, audit_status, lock_status, third_party_id, create_date, register_ip, 
    email_authed, mobile_authed, user_order, hot_user,apply_role,invite_code,register_origin
  </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from kg_user
    where user_id = #{userId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.kg.platform.model.in.UserInModel">
    insert into kg_user (user_id, user_name, user_email, 
      user_mobile, mobile_area, user_password, 
      user_role, user_level, audit_status, 
      lock_status, third_party_id, create_date, 
      register_ip, email_authed, mobile_authed,user_order,hot_user,apply_role,invite_code,register_origin
      )
    values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, 
      #{userMobile,jdbcType=VARCHAR}, #{mobileArea,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR}, 
      #{userRole,jdbcType=TINYINT}, #{userLevel,jdbcType=TINYINT}, #{auditStatus,jdbcType=BIT}, 
      #{lockStatus,jdbcType=BIT}, #{thirdPartyId,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{registerIp,jdbcType=VARCHAR}, #{emailAuthed,jdbcType=BIT}, #{mobileAuthed,jdbcType=BIT},
      #{userOrder,jdbcType=INTEGER},#{hotUser,jdbcType=BIT},#{applyRole,jdbcType=INTEGER}, #{inviteCode,jdbcType=VARCHAR},#{register_origin,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kg.platform.model.in.UserInModel">
    insert into kg_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="userMobile != null">
        user_mobile,
      </if>
      <if test="mobileArea != null">
        mobile_area,
      </if>
      <if test="userPassword != null">
        user_password,
      </if>
      <if test="userRole != null">
        user_role,
      </if>
      <if test="userLevel != null">
        user_level,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="lockStatus != null">
        lock_status,
      </if>
      <if test="thirdPartyId != null">
        third_party_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="registerIp != null">
        register_ip,
      </if>
      <if test="emailAuthed != null">
        email_authed,
      </if>
      <if test="mobileAuthed != null">
        mobile_authed,
      </if>
      <if test="userOrder != null">
        user_order,
      </if>
      <if test="hotUser != null">
        hot_user,
      </if>
      <if test="applyRole != null">
        apply_role,
      </if>

      <if test="inviteCode != null">
        invite_code,
      </if>
      <if test="registerOrigin != null">
        register_origin,
      </if>
      <if test="userSource != null">
        user_source,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="mobileArea != null">
        #{mobileArea,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        #{userRole,jdbcType=TINYINT},
      </if>
      <if test="userLevel != null">
        #{userLevel,jdbcType=TINYINT},
      </if>
      <if test="auditStatus != null">
        #{auditStatus,jdbcType=BIT},
      </if>
      <if test="lockStatus != null">
        #{lockStatus,jdbcType=BIT},
      </if>
      <if test="thirdPartyId != null">
        #{thirdPartyId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null">
        #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="emailAuthed != null">
        #{emailAuthed,jdbcType=BIT},
      </if>
      <if test="mobileAuthed != null">
        #{mobileAuthed,jdbcType=BIT},
      </if>
      <if test="userOrder != null">
        #{userOrder,jdbcType=INTEGER},
      </if>
      <if test="hotUser != null">
        #{hotUser,jdbcType=BIT},
      </if>
      <if test="applyRole != null">
        #{applyRole,jdbcType=INTEGER},
      </if>

      <if test="inviteCode != null">
        #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="registerOrigin != null">
        #{registerOrigin,jdbcType=TINYINT},
      </if>
       <if test="userSource != null">
        #{userSource,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
   <update id="updateByUserSelective" parameterType="com.kg.platform.model.in.UserInModel">
    update kg_user
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        user_mobile = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="mobileArea != null">
        mobile_area = #{mobileArea,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=TINYINT},
      </if>
      <if test="userLevel != null">
        user_level = #{userLevel,jdbcType=TINYINT},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=BIT},
      </if>
      <if test="thirdPartyId != null">
        third_party_id = #{thirdPartyId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null">
        register_ip = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="emailAuthed != null">
        email_authed = #{emailAuthed,jdbcType=BIT},
      </if>
      <if test="mobileAuthed != null">
        mobile_authed = #{mobileAuthed,jdbcType=BIT},
      </if>
      <if test="userOrder != null">
        user_order = #{userOrder,jdbcType=INTEGER},
      </if>
      <if test="hotUser != null">
        hot_user = #{hotUser,jdbcType=BIT},
      </if>
      <if test="applyRole != null">
        apply_role = #{applyRole,jdbcType=INTEGER},
      </if>
      <if test="tradepasswordSet != null">
        tradepassword_set = #{tradepasswordSet,jdbcType=BIT},
      </if>
      <if test="inviteCode != null">
        invite_code = #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="registerOrigin != null">
        register_origin = #{registerOrigin,jdbcType=VARCHAR},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  
  
  <update id="updateByPrimaryKeySelective" parameterType="com.kg.platform.dao.entity.User">
    update kg_user
    <set>
      <if test="userName != null  and userName != ''">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="userMobile != null">
        user_mobile = #{userMobile,jdbcType=VARCHAR},
      </if>
      <if test="mobileArea != null">
        mobile_area = #{mobileArea,jdbcType=VARCHAR},
      </if>
      <if test="userPassword != null">
        user_password = #{userPassword,jdbcType=VARCHAR},
      </if>
      <if test="userRole != null">
        user_role = #{userRole,jdbcType=TINYINT},
      </if>
      <if test="userLevel != null">
        user_level = #{userLevel,jdbcType=TINYINT},
      </if>
      <if test="auditStatus != null">
        audit_status = #{auditStatus,jdbcType=BIT},
      </if>
      <if test="lockStatus != null">
        lock_status = #{lockStatus,jdbcType=BIT},
      </if>
      <if test="thirdPartyId != null">
        third_party_id = #{thirdPartyId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="registerIp != null">
        register_ip = #{registerIp,jdbcType=VARCHAR},
      </if>
      <if test="emailAuthed != null">
        email_authed = #{emailAuthed,jdbcType=BIT},
      </if>
      <if test="mobileAuthed != null">
        mobile_authed = #{mobileAuthed,jdbcType=BIT},
      </if>
      <if test="userOrder != null">
        user_order = #{userOrder,jdbcType=INTEGER},
      </if>
      <if test="hotUser != null">
        hot_user = #{hotUser,jdbcType=BIT},
      </if>
      <if test="applyRole != null">
        apply_role = #{applyRole,jdbcType=INTEGER},
      </if>
      <if test="tradepasswordSet != null">
        tradepassword_set = #{tradepasswordSet,jdbcType=BIT},
      </if>
      <if test="realnameAuthed != null">
        realname_authed = #{realnameAuthed,jdbcType=INTEGER},
      </if>
      <if test="inviteCode != null">
        invite_code = #{inviteCode,jdbcType=VARCHAR},
      </if>
      <if test="registerOrigin != null">
        register_origin = #{registerOrigin,jdbcType=VARCHAR},
      </if>
      <if test="rankingList != null">
        ranking_list = #{rankingList,jdbcType=INTEGER},
      </if>
    </set>
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kg.platform.dao.entity.User">
    update kg_user
    set user_name = #{userName,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      user_mobile = #{userMobile,jdbcType=VARCHAR},
      mobile_area = #{mobileArea,jdbcType=VARCHAR},
      user_password = #{userPassword,jdbcType=VARCHAR},
      user_role = #{userRole,jdbcType=TINYINT},
      user_level = #{userLevel,jdbcType=TINYINT},
      audit_status = #{auditStatus,jdbcType=BIT},
      lock_status = #{lockStatus,jdbcType=BIT},
      third_party_id = #{thirdPartyId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      register_ip = #{registerIp,jdbcType=VARCHAR},
      email_authed = #{emailAuthed,jdbcType=BIT},
      mobile_authed = #{mobileAuthed,jdbcType=BIT},
    user_order = #{userOrder,jdbcType=INTEGER},
    hot_user = #{hotUser,jdbcType=BIT},
    invite_code = #{inviteCode,jdbcType=VARCHAR},
    register_origin = #{registerOrigin,jdbcType=TINYINT},
    apply_role = #{applyRole,jdbcType=INTEGER}
    where user_id = #{userId,jdbcType=BIGINT}
  </update>
  
  <update id="updatePssword" parameterType="com.kg.platform.model.in.UserInModel">
  update kg_user 
  set user_password=#{userPassword} 
   where  user_email = #{userEmail,jdbcType=VARCHAR} or  user_mobile = #{userMobile,jdbcType=VARCHAR} or user_id=#{userId,jdbcType=BIGINT}
  </update>
  
  <update id="centerUped" parameterType="com.kg.platform.model.in.UserInModel">
   update kg_user 
   <set>
      <if test="userEmail != null and '' != userEmail">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
       <if test="userMobile != null and '' != userMobile">
        user_mobile = #{userMobile,jdbcType=VARCHAR},
      </if>
   </set>  
   where user_id=#{userId,jdbcType=BIGINT}
  </update>
  
  <update id="UpdateRole" parameterType="com.kg.platform.model.in.UserInModel">
   update kg_user set audit_status = #{auditStatus}, apply_role = #{applyRole}, user_level=#{userLevel} where user_id=#{userId}
  </update>
  
  <update id="updateTxPassword" parameterType="com.kg.platform.model.request.TxPasswordEditRequest">
    update kg_account set tx_password = #{password,jdbcType=VARCHAR} where user_id = #{userId,jdbcType=BIGINT}
  </update>

  <update id="updateUserCert" parameterType="com.kg.platform.model.request.UserCertEditRequest">
    update kg_user_certificated set real_name = #{realname},idcard_no = #{idcardNo},idcard_front = #{idcardFront},idcard_back=#{idcardBack},idcard_pic = #{idcardPic},certificate_status = 2 where user_id = #{userId}
  </update>
  <insert id="insertUserCert" parameterType="com.kg.platform.model.request.UserCertEditRequest">
    insert into kg_user_certificated(real_name,idcard_no,idcard_front,idcard_back,idcard_pic,certificate_status,user_id)values
    (#{realname},#{idcardNo},#{idcardFront},#{idcardBack},#{idcardPic},2,#{userId})
  </insert>
  <select id="selectCountUserCert" resultType="java.lang.Long" parameterType="com.kg.platform.model.request.UserCertEditRequest">
    select count(*) from kg_user_certificated where user_id = #{userId}
  </select>

  <update id="updateColumnAuthed">
    update kg_user
    set column_authed = #{isAuthed}
    where user_id=#{userId}
  </update>

  <update id="updateColumnLevel">
    update kg_user_profile
    set column_level = #{columnLevel}
    where user_id = #{userId}
  </update>
</mapper>
