<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kg.platform.dao.write.WithdrawBonusFlowWMapper">
  <resultMap id="BaseResultMap" type="com.kg.platform.dao.entity.WithdrawBonusFlow">
    <id column="withdraw_flow_id" jdbcType="BIGINT" property="withdrawFlowId" />
    <result column="account_flow_id" jdbcType="BIGINT" property="accountFlowId" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="invite_count" jdbcType="INTEGER" property="inviteCount" />
    <result column="user_phone" jdbcType="VARCHAR" property="userPhone" />
    <result column="user_email" jdbcType="VARCHAR" property="userEmail" />
    <result column="withdraw_amount" jdbcType="DECIMAL" property="withdrawAmount" />
    <result column="account_amount" jdbcType="DECIMAL" property="accountAmount" />
    <result column="poundage_amount" jdbcType="DECIMAL" property="poundageAmount" />
    <result column="withdraw_time" jdbcType="TIMESTAMP" property="withdrawTime" />
    <result column="account_time" jdbcType="TIMESTAMP" property="accountTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    withdraw_flow_id, account_flow_id, user_id, invite_count, user_phone, user_email, withdraw_amount, 
    account_amount, poundage_amount, withdraw_time, account_time, remark, status
  </sql>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from kg_withdraw_bonus_flow
    where withdraw_flow_id = #{withdrawFlowId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.kg.platform.dao.entity.WithdrawBonusFlow">
    insert into kg_withdraw_bonus_flow (withdraw_flow_id, user_id, invite_count, 
      user_phone, user_email, withdraw_amount, 
      account_amount, poundage_amount, withdraw_time, 
      account_time, remark, status
      )
    values (#{withdrawFlowId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{inviteCount,jdbcType=INTEGER}, 
      #{userPhone,jdbcType=VARCHAR}, #{userEmail,jdbcType=VARCHAR}, #{withdrawAmount,jdbcType=DECIMAL}, 
      #{accountAmount,jdbcType=DECIMAL}, #{poundageAmount,jdbcType=DECIMAL}, #{withdrawTime,jdbcType=TIMESTAMP}, 
      #{accountTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.kg.platform.dao.entity.WithdrawBonusFlow">
    insert into kg_withdraw_bonus_flow
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="withdrawFlowId != null">
        withdraw_flow_id,
      </if>
      <if test="accountFlowId != null">
        account_flow_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="inviteCount != null">
        invite_count,
      </if>
      <if test="userPhone != null">
        user_phone,
      </if>
      <if test="userEmail != null">
        user_email,
      </if>
      <if test="withdrawAmount != null">
        withdraw_amount,
      </if>
      <if test="accountAmount != null">
        account_amount,
      </if>
      <if test="poundageAmount != null">
        poundage_amount,
      </if>
      <if test="withdrawTime != null">
        withdraw_time,
      </if>
      <if test="accountTime != null">
        account_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="withdrawFlowId != null">
        #{withdrawFlowId,jdbcType=BIGINT},
      </if>
      <if test="accountFlowId != null">
        #{accountFlowId,jdbcType=BIGINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="inviteCount != null">
        #{inviteCount,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="withdrawAmount != null">
        #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="accountAmount != null">
        #{accountAmount,jdbcType=DECIMAL},
      </if>
      <if test="poundageAmount != null">
        #{poundageAmount,jdbcType=DECIMAL},
      </if>
      <if test="withdrawTime != null">
        #{withdrawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountTime != null">
        #{accountTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kg.platform.dao.entity.WithdrawBonusFlow">
    update kg_withdraw_bonus_flow
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="inviteCount != null">
        invite_count = #{inviteCount,jdbcType=INTEGER},
      </if>
      <if test="userPhone != null">
        user_phone = #{userPhone,jdbcType=VARCHAR},
      </if>
      <if test="userEmail != null">
        user_email = #{userEmail,jdbcType=VARCHAR},
      </if>
      <if test="withdrawAmount != null">
        withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      </if>
      <if test="accountAmount != null">
        account_amount = #{accountAmount,jdbcType=DECIMAL},
      </if>
      <if test="poundageAmount != null">
        poundage_amount = #{poundageAmount,jdbcType=DECIMAL},
      </if>
      <if test="withdrawTime != null">
        withdraw_time = #{withdrawTime,jdbcType=TIMESTAMP},
      </if>
      <if test="accountTime != null">
        account_time = #{accountTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where withdraw_flow_id = #{withdrawFlowId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.kg.platform.dao.entity.WithdrawBonusFlow">
    update kg_withdraw_bonus_flow
    set user_id = #{userId,jdbcType=BIGINT},
      invite_count = #{inviteCount,jdbcType=INTEGER},
      user_phone = #{userPhone,jdbcType=VARCHAR},
      user_email = #{userEmail,jdbcType=VARCHAR},
      withdraw_amount = #{withdrawAmount,jdbcType=DECIMAL},
      account_amount = #{accountAmount,jdbcType=DECIMAL},
      poundage_amount = #{poundageAmount,jdbcType=DECIMAL},
      withdraw_time = #{withdrawTime,jdbcType=TIMESTAMP},
      account_time = #{accountTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where withdraw_flow_id = #{withdrawFlowId,jdbcType=BIGINT}
  </update>
</mapper>